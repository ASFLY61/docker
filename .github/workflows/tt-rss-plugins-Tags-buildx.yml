name: Build tt-rss-plugins-Tags Image

on:
  push:
    paths:
    - '.github/workflows/tt-rss-plugins-Tags-buildx.yml'
  workflow_dispatch:

env:
  TTRSS_VER: 21.10-9714c4fbc

jobs:
  buildx:
    runs-on: ubuntu-20.04
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: download postgres src
        run: |
          sudo apt-get update
          sudo apt-get install  git
          git clone https://github.com/docker-library/postgres.git
          #wget https://github.com/docker-library/postgres/archive/56eb8091dc67efe65b7a5a101e80ab83a9ca70a3.zip
          #unzip   56eb8091dc67efe65b7a5a101e80ab83a9ca70a3.zip
          #mv postgres-56eb8091dc67efe65b7a5a101e80ab83a9ca70a3 postgres
          #removed  CallSite.h
          sed -i '/rm postgresql.tar.bz2/i\\ \ \ \ sed -i "59d" /usr/src/postgresql/src/backend/jit/llvm/llvmjit_inline.cpp; \\' postgres/12/alpine/Dockerfile
          sed -i 's/^ENV.*PG_VERSION.*/ENV PG_VERSION 12.0/g' postgres/12/alpine/Dockerfile
          sed -i 's/^ENV.*PG_SHA256.*/ENV PG_SHA256 cda2397215f758b793f741c86be05468257b0e6bcb1a6113882ab5d0df0855c6/g' postgres/12/alpine/Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host

      - name: Build and push to local-registry
        uses: docker/build-push-action@v2
        with:
          context: ./postgres/12/alpine
          file: ./postgres/12/alpine/Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: localhost:5000/postgres:12.0-alpine

      - name: change Dockerfile
        run: |
          sed -i 's/postgres:12\.0-alpine/localhost:5000\/postgres:12\.0-alpine/g' tt-rss-plugins/Dockerfile

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: ./tt-rss-plugins
          file: ./tt-rss-plugins/Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: johngong/tt-rss:plugins-${{ env.TTRSS_VER }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./tt-rss-plugins
          file: ./tt-rss-plugins/Dockerfile
          platforms: linux/amd64
          push: true
          tags: johngong/tt-rss:plugins-${{ env.TTRSS_VER }}_amd64

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./tt-rss-plugins
          file: ./tt-rss-plugins/Dockerfile
          platforms: linux/arm64
          push: true
          tags: johngong/tt-rss:plugins-${{ env.TTRSS_VER }}_arm64v8

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./tt-rss-plugins
          file: ./tt-rss-plugins/Dockerfile
          platforms: linux/arm/v7
          push: true
          tags: johngong/tt-rss:plugins-${{ env.TTRSS_VER }}_arm32v7

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: johngong/tt-rss
          short-description: Tiny Tiny RSS:plugins-${{ env.TTRSS_VER }},集成postgres数据库,mercury-parser-api及一些常用插件
          readme-filepath: ./tt-rss-plugins/README.md
